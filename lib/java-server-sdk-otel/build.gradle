/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id "maven-publish"
    id "signing"
    id "io.github.gradle-nexus.publish-plugin" version "1.3.0"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/groups/public/" }
}

allprojects {
    group = 'com.launchdarkly'
    version = "${version}"
    archivesBaseName = 'launchdarkly-java-server-sdk-otel'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'
    // All Otel testing common packages are alpha variants, usage of alpha is intentional here
    testImplementation 'io.opentelemetry.javaagent:opentelemetry-testing-common:1.33.1-alpha'

    implementation "com.launchdarkly:launchdarkly-java-server-sdk:7.4.0-SNAPSHOT"
    implementation "io.opentelemetry:opentelemetry-api:1.2.0"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from(components["java"])

            pom {
                name.set("LaunchDarkly Java Server Otel Integration")
                url.set("https://github.com/launchdarkly/java-core")
                licenses {
                    license {
                        name.set("The Apache License, Version 2.0")
                        url.set("http://www.apache.org/licenses/LICENSE-2.0.txt")
                    }
                }
                developers {
                    developer {
                        name.set("LaunchDarkly SDK Team")
                        email.set("sdks@launchdarkly.com")
                    }
                }
                scm {
                    connection.set("scm:git:git://github.com/launchdarkly/java-core.git")
                    developerConnection.set("scm:git:ssh:git@github.com:launchdarkly/java-core.git")
                    url.set("https://github.com/launchdarkly/java-core")
                }
            }
        }
    }
}

nexusPublishing {
    clientTimeout = java.time.Duration.ofMinutes(2) // we've seen extremely long delays in creating repositories
    repositories {
        sonatype ()
    }
}

signing {
    sign(publishing.publications["mavenJava"])
}
